<?xml version="1.0" encoding="UTF-8"?>
<project executable="true" application-module="modality-all-backoffice-application">

    <description>The GWT executable module of the Modality Back-Office (for browsers).</description>

    <dependencies>
        <used-by-source-modules/>
        <plugin-module>modality-all-backoffice-application</plugin-module>
    </dependencies>

    <html>
        <head>
            <title>Modality Back-Office</title>
        </head>
    </html>

<!--
    <maven-pom-manual>
        <build>
            <plugins>

                &lt;!&ndash; Calling the GWT maven plugin to compile the gwt module into javascript &ndash;&gt;
                <plugin>
                    <groupId>net.ltgt.gwt.maven</groupId>
                    <artifactId>gwt-maven-plugin</artifactId>
                    <configuration>
                        <skipCompilation>${plugin.gwt.param.skipCompilation}</skipCompilation>
                        <moduleName>${plugin.gwt.param.module}</moduleName>
                        <failOnError>true</failOnError>
                        <draftCompile>${plugin.gwt.param.draftCompile}</draftCompile>
                        <optimize>${plugin.gwt.param.optimize}</optimize>
                        <sourceLevel>${gwt.sourceLevel}</sourceLevel>
                        <compilerArgs>
                            &lt;!&ndash; Setting value to return when compiling System.getProperty("application.name") &ndash;&gt;
                            <compilerArg>-setProperty</compilerArg>
                            <compilerArg>application.name=${application.name}</compilerArg>
                            &lt;!&ndash; Setting value to return when compiling System.getProperty("application.version") &ndash;&gt;
                            <compilerArg>-setProperty</compilerArg>
                            <compilerArg>application.version=${application.version}</compilerArg>
                            &lt;!&ndash; Setting value to return when compiling System.getProperty("application.build.tool") &ndash;&gt;
                            <compilerArg>-setProperty</compilerArg>
                            <compilerArg>application.build.tool=${application.build.tool}</compilerArg>
                            &lt;!&ndash; Setting value to return when compiling System.getProperty("application.build.number") &ndash;&gt;
                            <compilerArg>-setProperty</compilerArg>
                            <compilerArg>application.build.number=${application.build.number}</compilerArg>
                            &lt;!&ndash; Setting value to return when compiling System.getProperty("application.build.timestamp") &ndash;&gt;
                            <compilerArg>-setProperty</compilerArg>
                            <compilerArg>application.build.timestamp=${application.build.timestamp}</compilerArg>
                            &lt;!&ndash;compilerArg>-style</compilerArg>
                            <compilerArg>DETAILED</compilerArg&ndash;&gt;
                        </compilerArgs>
                        &lt;!&ndash; Doing the same for the code server (when compiling in super dev mode) &ndash;&gt;
                        <codeserverArgs>
                            &lt;!&ndash; Setting value to return when compiling System.getProperty("application.name") &ndash;&gt;
                            <codeserverArg>-setProperty</codeserverArg>
                            <codeserverArg>application.name=${application.name}</codeserverArg>
                            &lt;!&ndash; Setting value to return when compiling System.getProperty("application.version") &ndash;&gt;
                            <codeserverArg>-setProperty</codeserverArg>
                            <codeserverArg>application.version=${application.version}</codeserverArg>
                            &lt;!&ndash; Setting value to return when compiling System.getProperty("application.build.tool") &ndash;&gt;
                            <codeserverArg>-setProperty</codeserverArg>
                            <codeserverArg>application.build.tool=${application.build.tool}</codeserverArg>
                            &lt;!&ndash; Setting value to return when compiling System.getProperty("application.build.number") &ndash;&gt;
                            <codeserverArg>-setProperty</codeserverArg>
                            <codeserverArg>application.build.number=${application.build.number}</codeserverArg>
                            &lt;!&ndash; Setting value to return when compiling System.getProperty("application.build.timestamp") &ndash;&gt;
                            <codeserverArg>-setProperty</codeserverArg>
                            <codeserverArg>application.build.timestamp=${application.build.timestamp}</codeserverArg>
                        </codeserverArgs>
                        &lt;!&ndash; Trying to solve a java heap OutOfMemoryError on the server &ndash;&gt;
                        <jvmArgs>
                            <jvmArg>-Xmx1024m</jvmArg>
                        </jvmArgs>
                        &lt;!&ndash;<localWorkers>1</localWorkers>&ndash;&gt;
                    </configuration>
                </plugin>

            </plugins>
        </build>

    </maven-pom-manual>
-->

</project>