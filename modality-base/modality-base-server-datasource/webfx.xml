<?xml version="1.0" encoding="UTF-8"?>
<project>

    <exported-packages>
        <source-packages/>
        <resource-package>org.modality_project.base.server.datasource.MDS</resource-package>
    </exported-packages>

    <providers>
        <provider interface="dev.webfx.stack.db.datasource.spi.LocalDataSourceProvider">org.modality_project.base.server.services.datasource.ModalityLocalDataSourceProvider</provider>
    </providers>

    <dependencies>
        <used-by-source-modules>
            <undetected-module>webfx-stack-orm-domainmodel</undetected-module>
            <undetected-module>webfx-stack-orm-dql</undetected-module>
<!-- Temporarily commented for Modality refactoring (was causing build error otherwise)
            <undetected-module scope="test">junit-jupiter</undetected-module>
            <undetected-module scope="test">mockito-inline</undetected-module>
            <undetected-module scope="verify">selenium-java</undetected-module>
            <undetected-module scope="verify">webdrivermanager</undetected-module>
-->
        </used-by-source-modules>
    </dependencies>

<!--
    <maven-pom-manual>
        <build>
            <plugins>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M5</version>
                    <configuration>
                        <excludes>
                            <exclude>**/*IT</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M5</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.39.1</version>

                    <configuration>
                        <images>
                            <image>
                                <alias>mongoose</alias>
                                <name>fabric8/compose-demo:latest</name>
                                <external>
                                    <type>compose</type>
                                    <basedir>${project.basedir}/src/test/resources/docker</basedir>
                                    <composeFile>docker-compose.yml</composeFile>
                                </external>
                            </image>
                        </images>
                    </configuration>

                    &lt;!&ndash; Connect start/stop to pre- and
                         post-integration-test phase, respectively if you want to start
                         your docker containers during integration tests &ndash;&gt;
                    <executions>
                        <execution>
                            <id>start</id>
                            <inherited>false</inherited>
                            <phase>pre-integration-test</phase>
                            <goals>
                                &lt;!&ndash; "build" should be used to create the images with the
                                     artifact &ndash;&gt;
                                <goal>build</goal>
                                <goal>start</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>stop</id>
                            <inherited>false</inherited>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>stop</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                
            </plugins>
        </build>
    </maven-pom-manual>
-->

</project>